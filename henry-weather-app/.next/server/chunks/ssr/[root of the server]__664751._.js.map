{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/henrynunez/Desktop/henrys-weather-app/henry-weather-app/src/app/components/LightModeButton/LightModeButton.tsx"],"sourcesContent":["import React from \"react\";\nimport classes from \"./LightModeButton.module.css\";\n\nexport default function LightModeButton({\n  toggleTheme,\n  theme,\n}: {\n  toggleTheme: () => void;\n  theme: string;\n}) {\n  return (\n    <div>\n      <button\n        onClick={toggleTheme}\n        className={`px-4 py-2 font-semibold rounded-lg transition \n        ${\n          theme === \"light\"\n            ? \"bg-gray-900 text-white border-4 border-green-500\"\n            : \"bg-white text-gray-900 border-4 border-pink-500\"\n        }\n        hover:scale-105 shadow-md`}\n      >\n        <span>{theme === \"light\" ? \"Light\" : \"Dark\"}</span>\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGe,SAAS,gBAAgB,EACtC,WAAW,EACX,KAAK,EAIN;IACC,qBACE,8OAAC;kBACC,cAAA,8OAAC;YACC,SAAS;YACT,WAAW,CAAC;QACZ,EACE,UAAU,UACN,qDACA,kDACL;iCACwB,CAAC;sBAE1B,cAAA,8OAAC;0BAAM,UAAU,UAAU,UAAU;;;;;;;;;;;;;;;;AAI7C"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/henrynunez/Desktop/henrys-weather-app/henry-weather-app/src/app/components/Weather.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Location,\n  WeatherData,\n  ForecastData,\n  Forecast,\n} from \"../types/weather-types\";\nimport LightModeButton from \"./LightModeButton/LightModeButton\";\nimport Image from \"next/image\";\n\nexport default function Weather({\n  theme,\n  toggleTheme,\n}: {\n  theme: string;\n  toggleTheme: () => void;\n}) {\n  const [location, setLocation] = useState<Location>({ lat: 0, lon: 0 });\n  const [weather, setWeather] = useState<WeatherData | null>(null);\n  const [forecast, setForecast] = useState<ForecastData | null>(null);\n  const [error, setError] = useState<string>(\"\");\n  const [isCelsius, setIsCelsius] = useState(true);\n\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setLocation({\n            lat: position.coords.latitude,\n            lon: position.coords.longitude,\n          });\n        },\n        () => {\n          setError(\"Unable to retrieve location. Please enter a city.\");\n        }\n      );\n    } else {\n      setError(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n  useEffect(() => {\n    if (location.lat !== 0 && location.lon !== 0) {\n      getWeatherByLocation(location.lat, location.lon);\n    }\n  }, [location]);\n\n  const getWeatherByLocation = async (lat: number, lon: number) => {\n    try {\n      setError(\"\");\n      const [weatherRes, forecastRes] = await Promise.all([\n        fetch(`/api/weather?lat=${lat}&lon=${lon}`),\n        fetch(`/api/forecast?lat=${lat}&lon=${lon}`),\n      ]);\n\n      if (!weatherRes.ok || !forecastRes.ok) {\n        throw new Error(\"Failed to fetch data\");\n      }\n\n      const weatherData: WeatherData = await weatherRes.json();\n      const forecastData: ForecastData = await forecastRes.json();\n\n      setWeather(weatherData);\n      setForecast(forecastData);\n    } catch {\n      setError(\"Failed to fetch weather data.\");\n    }\n  };\n\n  const convertCelsiusToFahrenheit = (celsius: number) => {\n    return Math.round((celsius * 9) / 5 + 32);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center w-full max-w-4xl mx-auto p-6 bg-gray-100 dark:bg-gray-900 rounded-lg shadow-lg\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center w-full pb-4 border-b border-gray-300 dark:border-gray-700\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\n          Weather App\n        </h1>\n        <LightModeButton theme={theme} toggleTheme={toggleTheme} />\n      </div>\n\n      {error && <p className=\"text-red-500\">{error}</p>}\n\n      {/* Weather Info */}\n      {weather && (\n        <div className=\"mt-6 p-6 bg-white dark:bg-gray-800 rounded-lg shadow-md w-full text-center\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\n            {weather.name}\n          </h2>\n          <p className=\"text-gray-700 dark:text-gray-300\">\n            {weather.weather[0].description}\n          </p>\n          <p className=\"text-lg font-medium text-gray-800 dark:text-gray-200\">\n            Feels like:{\" \"}\n            {isCelsius\n              ? weather.main.temp\n              : convertCelsiusToFahrenheit(weather.main.feels_like)}\n            °{isCelsius ? \"C\" : \"F\"}\n          </p>\n          <Image\n            src={`http://openweathermap.org/img/wn/${weather.weather[0]?.icon}.png`}\n            alt=\"Weather Icon\"\n            width={50}\n            height={50}\n            className=\"mx-auto\"\n          />\n        </div>\n      )}\n\n      {/* Forecast */}\n      {forecast && (\n        <div className=\"mt-6 w-full\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100 text-center\">\n            5-Day Forecast\n          </h2>\n          <p className=\"text-center text-gray-700 dark:text-gray-300\">\n            {forecast.city.name}, {forecast.city.country}\n          </p>\n          <p className=\"text-center text-gray-600 dark:text-gray-400\">\n            Sunrise:{\" \"}\n            {new Date(forecast.city.sunrise * 1000).toLocaleTimeString(\n              \"en-US\",\n              { hour: \"2-digit\", minute: \"2-digit\" }\n            )}\n            &nbsp;|&nbsp; Sunset:{\" \"}\n            {new Date(forecast.city.sunset * 1000).toLocaleTimeString(\"en-US\", {\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n            })}\n          </p>\n\n          {/* Toggle Button */}\n          <div className=\"flex justify-center mt-4\">\n            <button\n              className=\"px-4 py-2 bg-blue-600 dark:bg-blue-500 text-white rounded-lg hover:bg-blue-700 dark:hover:bg-blue-400 transition\"\n              onClick={() => setIsCelsius(!isCelsius)}\n            >\n              Switch to {isCelsius ? \"Fahrenheit\" : \"Celsius\"}\n            </button>\n          </div>\n\n          {/* Forecast List */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4 mt-6\">\n            {forecast.list\n              .filter((_, index) => index % 8 === 0) // Show once per day\n              .map((day: Forecast, idx) => (\n                <div\n                  key={idx}\n                  className=\"p-4 bg-white dark:bg-gray-800 rounded-lg shadow-md flex flex-col items-center\"\n                >\n                  <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\n                    {new Date(day.dt_txt).toLocaleDateString(\"en-US\", {\n                      weekday: \"long\",\n                    })}\n                  </p>\n                  <p className=\"text-gray-700 dark:text-gray-300\">\n                    Temp:{\" \"}\n                    {isCelsius\n                      ? day.main.temp\n                      : convertCelsiusToFahrenheit(day.main.temp)}\n                    °{isCelsius ? \"C\" : \"F\"}\n                  </p>\n                  <p className=\"text-gray-600 dark:text-gray-400\">\n                    {day.weather[0]?.description}\n                  </p>\n                  <Image\n                    src={`http://openweathermap.org/img/wn/${day.weather[0]?.icon}.png`}\n                    alt=\"Weather Icon\"\n                    width={50}\n                    height={50}\n                  />\n                </div>\n              ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAOA;AACA;AATA;;;;;AAWe,SAAS,QAAQ,EAC9B,KAAK,EACL,WAAW,EAIZ;IACC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;QAAE,KAAK;QAAG,KAAK;IAAE;IACpE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IAC3D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;IAC9D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,iBAAiB,WAAW;YAC9B,UAAU,WAAW,CAAC,kBAAkB,CACtC,CAAC;gBACC,YAAY;oBACV,KAAK,SAAS,MAAM,CAAC,QAAQ;oBAC7B,KAAK,SAAS,MAAM,CAAC,SAAS;gBAChC;YACF,GACA;gBACE,SAAS;YACX;QAEJ,OAAO;YACL,SAAS;QACX;IACF,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,SAAS,GAAG,KAAK,KAAK,SAAS,GAAG,KAAK,GAAG;YAC5C,qBAAqB,SAAS,GAAG,EAAE,SAAS,GAAG;QACjD;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,uBAAuB,OAAO,KAAa;QAC/C,IAAI;YACF,SAAS;YACT,MAAM,CAAC,YAAY,YAAY,GAAG,MAAM,QAAQ,GAAG,CAAC;gBAClD,MAAM,CAAC,iBAAiB,EAAE,IAAI,KAAK,EAAE,KAAK;gBAC1C,MAAM,CAAC,kBAAkB,EAAE,IAAI,KAAK,EAAE,KAAK;aAC5C;YAED,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,EAAE,EAAE;gBACrC,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,cAA2B,MAAM,WAAW,IAAI;YACtD,MAAM,eAA6B,MAAM,YAAY,IAAI;YAEzD,WAAW;YACX,YAAY;QACd,EAAE,OAAM;YACN,SAAS;QACX;IACF;IAEA,MAAM,6BAA6B,CAAC;QAClC,OAAO,KAAK,KAAK,CAAC,AAAC,UAAU,IAAK,IAAI;IACxC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsD;;;;;;kCAGpE,8OAAC,+JAAA,CAAA,UAAe;wBAAC,OAAO;wBAAO,aAAa;;;;;;;;;;;;YAG7C,uBAAS,8OAAC;gBAAE,WAAU;0BAAgB;;;;;;YAGtC,yBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCACX,QAAQ,IAAI;;;;;;kCAEf,8OAAC;wBAAE,WAAU;kCACV,QAAQ,OAAO,CAAC,EAAE,CAAC,WAAW;;;;;;kCAEjC,8OAAC;wBAAE,WAAU;;4BAAuD;4BACtD;4BACX,YACG,QAAQ,IAAI,CAAC,IAAI,GACjB,2BAA2B,QAAQ,IAAI,CAAC,UAAU;4BAAE;4BACtD,YAAY,MAAM;;;;;;;kCAEtB,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK,CAAC,iCAAiC,EAAE,QAAQ,OAAO,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC;wBACvE,KAAI;wBACJ,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;;;;;;;YAMf,0BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAqE;;;;;;kCAGnF,8OAAC;wBAAE,WAAU;;4BACV,SAAS,IAAI,CAAC,IAAI;4BAAC;4BAAG,SAAS,IAAI,CAAC,OAAO;;;;;;;kCAE9C,8OAAC;wBAAE,WAAU;;4BAA+C;4BACjD;4BACR,IAAI,KAAK,SAAS,IAAI,CAAC,OAAO,GAAG,MAAM,kBAAkB,CACxD,SACA;gCAAE,MAAM;gCAAW,QAAQ;4BAAU;4BACrC;4BACoB;4BACrB,IAAI,KAAK,SAAS,IAAI,CAAC,MAAM,GAAG,MAAM,kBAAkB,CAAC,SAAS;gCACjE,MAAM;gCACN,QAAQ;4BACV;;;;;;;kCAIF,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BACC,WAAU;4BACV,SAAS,IAAM,aAAa,CAAC;;gCAC9B;gCACY,YAAY,eAAe;;;;;;;;;;;;kCAK1C,8OAAC;wBAAI,WAAU;kCACZ,SAAS,IAAI,CACX,MAAM,CAAC,CAAC,GAAG,QAAU,QAAQ,MAAM,GAAG,oBAAoB;yBAC1D,GAAG,CAAC,CAAC,KAAe,oBACnB,8OAAC;gCAEC,WAAU;;kDAEV,8OAAC;wCAAE,WAAU;kDACV,IAAI,KAAK,IAAI,MAAM,EAAE,kBAAkB,CAAC,SAAS;4CAChD,SAAS;wCACX;;;;;;kDAEF,8OAAC;wCAAE,WAAU;;4CAAmC;4CACxC;4CACL,YACG,IAAI,IAAI,CAAC,IAAI,GACb,2BAA2B,IAAI,IAAI,CAAC,IAAI;4CAAE;4CAC5C,YAAY,MAAM;;;;;;;kDAEtB,8OAAC;wCAAE,WAAU;kDACV,IAAI,OAAO,CAAC,EAAE,EAAE;;;;;;kDAEnB,8OAAC,6HAAA,CAAA,UAAK;wCACJ,KAAK,CAAC,iCAAiC,EAAE,IAAI,OAAO,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC;wCACnE,KAAI;wCACJ,OAAO;wCACP,QAAQ;;;;;;;+BAtBL;;;;;;;;;;;;;;;;;;;;;;AA+BvB"}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///Users/henrynunez/Desktop/henrys-weather-app/henry-weather-app/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport Weather from \"./components/Weather\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Home() {\n  const [theme, setTheme] = useState(() => {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(\"theme\") || \"light\";\n    }\n    return \"light\";\n  });\n\n  useEffect(() => {\n    document.documentElement.setAttribute(\"data-theme\", theme);\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Weather theme={theme} toggleTheme={toggleTheme} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACjC,uCAAmC;;QAEnC;QACA,OAAO;IACT;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS,eAAe,CAAC,YAAY,CAAC,cAAc;QACpD,aAAa,OAAO,CAAC,SAAS;IAChC,GAAG;QAAC;KAAM;IAEV,MAAM,cAAc;QAClB,SAAS,CAAC,YAAe,cAAc,UAAU,SAAS;IAC5D;IAEA,qBACE,8OAAC;QAAI,OAAO;YAAE,SAAS;YAAQ,gBAAgB;QAAS;kBACtD,cAAA,8OAAC,oIAAA,CAAA,UAAO;YAAC,OAAO;YAAO,aAAa;;;;;;;;;;;AAG1C"}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}